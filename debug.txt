一步修复：同时安装到 purelib 和 platlib

把你的 spec 的 %install 段换成下面这一段（它会计算出两个可能的目录并复制到位，从而兼容 /usr/lib 与 /usr/lib64 以及 /usr/local 差异），其它内容不变：

%install
# 计算 Python 3 的纯 Python 路径(purelib) 和 平台相关路径(platlib)
PYTHON=/usr/bin/python3
PURELIB=$($PYTHON - <<'PY'
import sysconfig; print(sysconfig.get_path('purelib'))
PY
)
PLATLIB=$($PYTHON - <<'PY'
import sysconfig; print(sysconfig.get_path('platlib'))
PY
)

copy_to() {
  d="$1"; [ -z "$d" ] && return
  mkdir -p "%{buildroot}$d"
  # 主入口模块（确保仓库里有 src/cryptojacking_detect.py 且包含 main()）
  install -m 0644 src/cryptojacking_detect.py "%{buildroot}$d/" || exit 1
  # 三个包目录（目录中要有 __init__.py；l3 里要有 src/memory_info.py）
  cp -a src/miner_sentinel_l1 src/miner_sentinel_l2 src/miner_sentinel_l3 "%{buildroot}$d/" || exit 1
}
# 装到 purelib；若 platlib 与 purelib 不同，再装一次到 platlib
copy_to "$PURELIB"
[ "$PLATLIB" != "$PURELIB" ] && copy_to "$PLATLIB"

# 可执行脚本（手工包装，不依赖 console_scripts）
install -Dpm0755 /dev/stdin %{buildroot}%{_bindir}/cryptojacking-detect <<'EOF'
#!/usr/bin/python3
from cryptojacking_detect import main
if __name__ == "__main__":
    raise SystemExit(main())
EOF

# 把 l1 的 YAML 放到 /etc/，升级不覆盖用户修改
install -d %{buildroot}%{_sysconfdir}/%{name}
find src/miner_sentinel_l1 -type f \( -name '*.yaml' -o -name '*.yml' \) -print0 \
  | xargs -0 -r install -m 0644 -t %{buildroot}%{_sysconfdir}/%{name}

# 生成 %files 清单
( cd %{buildroot} && find . -type f -printf "/%P\n" | sort -u ) > installed-files.list
awk 'BEGIN{cfg="/etc/%{name}/"} { if (index($0,cfg)==1) print "%config(noreplace) "$0; else print $0 }' \
    installed-files.list > installed-files.list.new && mv installed-files.list.new installed-files.list


说明

有的发行版 purelib 是 /usr/lib/python3.X/site-packages，有的是 /usr/lib64/...，也可能是 /usr/local/lib/...。上面做法两边都覆盖，Python 无论取哪个都会找到。

你之前之所以“安装成功但运行导入失败”，基本就是装到不在 sys.path 的那个目录了。

重建并验证
# 1) 重新打 Source0（在项目根）
NAME=kylin-ai-cryptojacking-detect; VER=0.1.0
tmp=$(mktemp -d); mkdir -p "$tmp/${NAME}-${VER}"
rsync -a --delete --exclude ".git" ./ "$tmp/${NAME}-${VER}/"
tar -C "$tmp" -czf "$HOME/rpmbuild/SOURCES/${NAME}-${VER}.tar.gz" "${NAME}-${VER}"
rm -rf "$tmp"

# 2) 重建
rpmbuild -ba "$HOME/rpmbuild/SPECS/${NAME}.spec"

# 3) 安装最新包
RPM=$(ls -1t ~/rpmbuild/RPMS/noarch/${NAME}-${VER}-*.noarch.rpm | head -n1)
sudo dnf -y install "$RPM" || sudo yum -y localinstall "$RPM"

# 4) 验证
which cryptojacking-detect
cryptojacking-detect --help

# 如还不放心，列出包里 cryptojacking_detect.py 的真实安装位置
rpm -ql ${NAME} | grep -E 'site-packages/.*/cryptojacking_detect\.py'
# 以及 Python 的搜索路径
python3 - <<'PY'
import sys, sysconfig, pprint
print("purelib:", sysconfig.get_path('purelib'))
print("platlib:", sysconfig.get_path('platlib'))
pprint.pp(sys.path)
PY