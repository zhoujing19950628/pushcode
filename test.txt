方案A（推荐）：把 wheelhouse 填满再重打包

在你这台要安装的机器上（x86_64），到项目根执行：

NAME=kylin-ai-cryptojacking-detect
VERSION=1.0.0
WH="packaging/${NAME}-${VERSION}/opt/${NAME}/wheelhouse_x86_64"
REQ="packaging/${NAME}-${VERSION}/opt/${NAME}/requirements.txt"

# 确保目录存在
mkdir -p "$WH"

# 仅下载二进制轮子（优先避免源码包）
python3 -m pip download --only-binary=:all: -r "$REQ" -d "$WH" || true

# 如果依旧没有 psutil，就现场编译一个 wheel 放进去（需要 gcc 和 python3-devel）
python3 -m pip wheel psutil -w "$WH" || {
  dnf -y install gcc python3-devel make
  python3 -m pip wheel psutil -w "$WH"
}

# 验证 wheelhouse 里确实有 psutil
ls -1 "$WH" | grep -i psutil


如果 pandas/scikit-learn 对你这台 Python 版本没有预编译轮子，也可以先临时从 requirements.txt 里删掉它们（只保留 L1/L3 需要的包：psutil, PyYAML, websocket-client 等），等需要 L2 再补。

重新打 Source0 并重建 RPM：

TOPDIR="$(pwd)/.rpmbuild"
( cd packaging && tar czf "$TOPDIR/SOURCES/${NAME}-${VERSION}.tar.gz" "${NAME}-${VERSION}" )
rpmbuild --define "_topdir $TOPDIR" -ba ".rpmbuild/SPECS/${NAME}.spec"


再次安装并验证：

sudo rpm -Uvh ".rpmbuild/RPMS/noarch/${NAME}-${VERSION}-1.noarch.rpm"
sudo systemctl start ${NAME}.service
systemctl status ${NAME}.service