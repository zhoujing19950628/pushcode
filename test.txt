原因是：你的 Source0 压缩包里没有 usr/bin/kylin-ai-cryptojacking-detect（以及可能也没有 *.service），而我那份 spec 是“从 Source0 里拷贝这两个文件”。——所以自然报 “找不到”。

最稳的修法：让 spec 在 %install 里“就地生成”包装脚本和 systemd 单元，不再依赖它们是否打进 Source0。把下面这份“自给自足”的 spec 覆盖掉你当前的即可。

修正版（自带 wrapper + service，不再从 Source0 拷贝）

把这段保存为：.rpmbuild/SPECS/kylin-ai-cryptojacking-detect.spec

Name:           kylin-ai-cryptojacking-detect
Version:        1.0.0
Release:        1%{?dist}
Summary:        Kylin AI Cryptojacking Detect
License:        Proprietary
URL:            http://www.kylinos.cn
Source0:        %{name}-%{version}.tar.gz

BuildArch:      noarch
ExcludeArch:    loongarch64
Requires:       python3 >= 3.6
Requires:       systemd

%description
Python-based cryptojacking detector. Installs to /opt/%{name}, creates
a venv on install, and provides a systemd service.

%prep
%setup -q

%build
# nothing

%install
rm -rf %{buildroot}

# 1) 业务负载：从 Source0 的 opt/%{name}/ 拷到目标
mkdir -p %{buildroot}/opt/%{name}
cp -a opt/%{name}/* %{buildroot}/opt/%{name}/

# 2) 生成 /usr/bin 启动包装脚本（不再依赖 Source0 是否带该文件）
mkdir -p %{buildroot}/usr/bin
cat > %{buildroot}/usr/bin/%{name} <<'EOF'
#!/usr/bin/env bash
set -euo pipefail
APP="/opt/kylin-ai-cryptojacking-detect"
VENV="$APP/kylin-ai-cryptojacking-detect-venv"
PY="$VENV/bin/python3"
PIP="$VENV/bin/pip"

# 首次创建 venv 并装依赖：离线优先，失败在线兜底
if [ ! -x "$PY" ]; then
  python3 -m venv "$VENV"
  "$PY" -m ensurepip --upgrade >/dev/null 2>&1 || :
  ARCH="$(uname -m)"
  case "$ARCH" in
    x86_64)  WH="$APP/wheelhouse_x86_64" ;;
    aarch64) WH="$APP/wheelhouse_aarch64" ;;
    *) echo "Unsupported arch: $ARCH" >&2; exit 1 ;;
  esac
  if [ -s "$APP/requirements.txt" ]; then
    if ! "$PIP" install --no-index --find-links="$WH" -r "$APP/requirements.txt"; then
      if [ "${KACD_OFFLINE_ONLY:-0}" -eq 1 ]; then
        echo "Offline-only & missing wheels in $WH" >&2; exit 1
      fi
      "$PIP" install -r "$APP/requirements.txt"
    fi
  fi
fi

# 运行你的入口；默认附加 --monitor，可按需要改
exec "$PY" "$APP/src/cryptojacking_detect.py" --monitor "$@"
EOF
chmod 0755 %{buildroot}/usr/bin/%{name}

# 3) 生成 systemd 单元（不再依赖 Source0 是否带该文件）
mkdir -p %{buildroot}/etc/systemd/system
cat > %{buildroot}/etc/systemd/system/%{name}.service <<'EOF'
[Unit]
Description=Kylin AI Cryptojacking Detect
After=network.target

[Service]
Type=simple
WorkingDirectory=/opt/kylin-ai-cryptojacking-detect
Environment=PYTHONUNBUFFERED=1
ExecStart=/usr/bin/kylin-ai-cryptojacking-detect
Restart=always
RestartSec=3

[Install]
WantedBy=multi-user.target
EOF

# 4) 仅编译字节码、保留源码（避免入口被删）
python3 -m compileall -q -j0 %{buildroot}/opt/%{name} || :

# 5) 按当前架构裁剪另一套 wheelhouse（若你打了双架构轮子）
%ifarch x86_64
rm -rf %{buildroot}/opt/%{name}/wheelhouse_aarch64
%endif
%ifarch aarch64
rm -rf %{buildroot}/opt/%{name}/wheelhouse_x86_64
%endif

%post
# 安装后启用服务（如你不想起服务，可把下面三行删掉）
systemctl daemon-reload >/dev/null 2>&1 || :
systemctl enable %{name}.service >/dev/null 2>&1 || :
# 不自动启动，改为管理员手动：systemctl start %{name}.service
exit 0

%preun
if [ "$1" -eq 0 ]; then
  systemctl stop %{name}.service >/dev/null 2>&1 || :
  systemctl disable %{name}.service >/dev/null 2>&1 || :
fi
exit 0

%postun
systemctl daemon-reload >/dev/null 2>&1 || :
exit 0

%files
# 先排除，再整体收录，最后以 config 方式单列，避免重复告警
%exclude /opt/%{name}/src/miner_sentinel_l1/src/config/monitoring_rules.yaml
%exclude /opt/%{name}/src/miner_sentinel_l2/src/config/pid_whitelist.yaml
/opt/%{name}
/usr/bin/%{name}
/etc/systemd/system/%{name}.service
%config(noreplace) /opt/%{name}/src/miner_sentinel_l1/src/config/monitoring_rules.yaml
%config(noreplace) /opt/%{name}/src/miner_sentinel_l2/src/config/pid_whitelist.yaml

%changelog
* Thu Oct 23 2025 You <you@example.com> 1.0.0-1
- Create wrapper & systemd unit inside %%install to avoid missing Source0 files.
- Keep sources; compile bytecode only.
- Offline-first dependency install at first run; KACD_OFFLINE_ONLY=1 to forbid fallback.

你需要确认的只有一件事

Source0 压缩包里必须仍然包含你的业务目录：
opt/kylin-ai-cryptojacking-detect/（含 src/、requirements.txt、可选的 wheelhouse_x86_64/ / wheelhouse_aarch64/）。
其它像 /usr/bin/... 和 *.service 不再需要打进 Source0，spec 会自己生成。

重新构建与安装
# 1) 如果你更新了 Source0 的内容，重新打进去
NAME=kylin-ai-cryptojacking-detect
VER=1.0.0
TOPDIR="$(pwd)/.rpmbuild"
( cd packaging && tar czf "$TOPDIR/SOURCES/${NAME}-${VER}.tar.gz" "${NAME}-${VER}" )

# 2) 构建
rpmbuild --define "_topdir $TOPDIR" -ba ".rpmbuild/SPECS/${NAME}.spec"

# 3) 安装
sudo rpm -Uvh ".rpmbuild/RPMS/noarch/${NAME}-${VER}-*.noarch.rpm"

# 4) （可选）启动服务
sudo systemctl start ${NAME}.service


这样就彻底规避了你这次的“找不到 usr/bin 脚本/服务文件”的问题；后续即使忘了把这两个文件放进压缩包，也能稳定构建通过。如果你决定不启服务，把 %post/%preun/%postun 里涉及 systemd 的几行删掉即可。