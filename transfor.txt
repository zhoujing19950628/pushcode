问题的根因很简单：

你在拷贝 packaging/rpm/kylin-ai-cryptojacking-detect.spec 时提示 No such file or directory，说明仓库里还没有 spec；

随后 builddep/rpmbuild 也就找不到 /root/rpmbuild/SPECS/...spec，于是报 “can’t parse specfile”。

一步到位：先创建 spec，再打包

在项目根目录执行下面整段（可直接粘贴）。它会创建 spec、重新打 Source0 源码包、安装构建依赖并开建。

假设版本是 0.1.0，入口函数是 cryptojacking_detect:main；如果不同，改下面两处即可。

# 在你的项目根（包含 src/ 与 pyproject.toml）
cd /path/to/kylin-ai-cryptojacking-detect

NAME=kylin-ai-cryptojacking-detect
VER=0.1.0

# 1) 创建 spec 到 ~/rpmbuild/SPECS/
cat > "$HOME/rpmbuild/SPECS/${NAME}.spec" <<'SPEC'
Name:           kylin-ai-cryptojacking-detect
Version:        0.1.0
Release:        1%{?dist}
Summary:        Cryptojacking detector (Python CLI)
License:        MIT
URL:            https://example.com/kylin-ai-cryptojacking-detect
Source0:        %{name}-%{version}.tar.gz
BuildArch:      noarch

# 使用 pyproject 宏（你已安装 pyproject-rpm-macros）
BuildRequires:  python3-devel
BuildRequires:  python3-pip
BuildRequires:  python3-wheel
BuildRequires:  pyproject-rpm-macros
BuildRequires:  findutils
BuildRequires:  coreutils

%generate_buildrequires
%pyproject_buildrequires -r

# 运行时依赖（按需调整；仓库没有就先删掉该行）
Requires:       python3
Requires:       python3-psutil
Requires:       python3-pandas
Requires:       python3-pyyaml

%description
A simple command-line cryptojacking detector for Linux.

%prep
%autosetup -n %{name}-%{version}

%build
%pyproject_wheel

%install
%pyproject_install

# 可编辑配置：把 YAML 放到 /etc/%{name}/（升级不覆盖用户修改）
install -d %{buildroot}%{_sysconfdir}/%{name}
# 按你的实际目录改路径；这里示例从 l1 收集 *.yaml/*.yml
find src/miner_sentinel_l1 -type f \( -name '*.yaml' -o -name '*.yml' \) -print0 \
 | xargs -0 -r install -m 0644 -t %{buildroot}%{_sysconfdir}/%{name}

%files -f %{pyproject_files}
%config(noreplace) %{_sysconfdir}/%{name}/*
# %license LICENSE*
# %doc README* CHANGELOG*
SPEC

# 2) 重新打 Source0 源码包到 ~/rpmbuild/SOURCES/
tmp=$(mktemp -d); mkdir -p "$tmp/${NAME}-${VER}"
rsync -a --delete --exclude ".git" ./ "$tmp/${NAME}-${VER}/"
tar -C "$tmp" -czf "$HOME/rpmbuild/SOURCES/${NAME}-${VER}.tar.gz" "${NAME}-${VER}"
rm -rf "$tmp"

# 3) （可选）自动装构建依赖
sudo dnf -y builddep "$HOME/rpmbuild/SPECS/${NAME}.spec" || true

# 4) 开建
rpmbuild -ba "$HOME/rpmbuild/SPECS/${NAME}.spec"


成功后，包会在：

~/rpmbuild/RPMS/noarch/kylin-ai-cryptojacking-detect-0.1.0-1.noarch.rpm

两个关键检查（避免再踩坑）

pyproject.toml 必须有入口脚本（这样安装后自动有 /usr/bin/cryptojacking-detect）：

[project.scripts]
cryptojacking-detect = "cryptojacking_detect:main"


源码里包含所有被 import 的模块（比如你之前补的 src/miner_sentinel_l3/src/memory_info.py），并且这些目录都有 __init__.py。

如果你的发行版缺少某些 python3-... 运行时包（如 python3-pandas），可先暂时删除 spec 里的那几行 Requires: 再构建，之后用 pip 或你自己的 RPM 解决依赖。

再遇到报错，直接把 rpmbuild 的最后 30 行日志贴我，我帮你定位具体是哪一步（spec 语法、缺文件、依赖缺失或路径不对）。